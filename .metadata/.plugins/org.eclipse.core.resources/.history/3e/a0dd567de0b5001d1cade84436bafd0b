package com.anapurna.controllers;

import java.util.List;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;


import com.anapurna.dtos.Credentials;
import com.anapurna.dtos.CustomerDto;
import com.anapurna.dtos.CustomerSignUpDto;
import com.anapurna.dtos.DaoToEntityConverter;
import com.anapurna.dtos.FoodItemHomePageDto;
import com.anapurna.dtos.AnapurnaResponse;

import com.anapurna.dtos.OrdersDto;
import com.anapurna.dtos.PlaceOrderDto;
import com.anapurna.dtos.RestaurentHomePageDto;
import com.anapurna.entities.Customer;
import com.anapurna.entities.Orders;
import com.anapurna.services.CustomerService;
import com.anapurna.services.FoodItemService;
import com.anapurna.services.OrdersService;
import com.anapurna.services.RestaurentService;


@CrossOrigin(origins = "*")
@RestController
@RequestMapping("/api/v1/")
public class CustomerController {
	
	@Autowired
	private CustomerService customerService;
	
	@Autowired
	private RestaurentService restaurantService;
	
	
	@PostMapping("/customers/signup")
	public ResponseEntity<AnapurnaResponse> signUp(@RequestBody CustomerSignUpDto customerSignUpDto){
		Customer cust=DaoToEntityConverter.customerSignUpDtoToCustomerEntity(customerSignUpDto);
		customerService.saveCustomer(cust);
		return AnapurnaResponse.success("Customer added!");
	}
	
	
	@PostMapping("/customers/signin")
	public ResponseEntity<AnapurnaResponse> signIn(@RequestBody Credentials cred){
		CustomerDto customerDto=customerService.findCustomerByEmailAndPassword(cred);
		if(customerDto==null) {
			return AnapurnaResponse.error("Couldn't find Customer with that credentials");
		}
		
		return AnapurnaResponse.success(customerDto);
	}
	
	
	@GetMapping("/restaurents")
	public ResponseEntity<AnapurnaResponse> findAllRestaurants(){
		List<RestaurentHomePageDto> restDtoList=restaurantService.findAllRestaurentsHomePageDto();
		return AnapurnaResponse.success(restDtoList);
	}
	
	
	
	
	
	
	

}
