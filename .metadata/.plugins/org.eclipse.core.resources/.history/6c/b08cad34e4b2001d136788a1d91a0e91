package com.anapurna.services;

import java.util.List;
import java.util.Optional;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.transaction.Transactional;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.anapurna.daos.DeliveryPersonDao;
import com.anapurna.dtos.Credentials;
import com.anapurna.dtos.DeliveryPersonDto;
import com.anapurna.dtos.DeliveryPersonSignUpDto;
import com.anapurna.entities.DeliveryPerson;



@Service
@Transactional
public class DeliveryPersonService {
	
	@Autowired
	private DeliveryPersonDao deliveryPersonDao;
	
	@PersistenceContext
	private EntityManager entityManager;
	
	public List<DeliveryPerson> findAllDeliveryPerson(){
		return deliveryPersonDao.findAll();
	}
	
	
	public Optional<DeliveryPerson> getDeliveryPersonById(int id){
		return deliveryPersonDao.findById(id);
	}
	
	
	public boolean saveDeliveryPerson(DeliveryPerson deliveryPerson) {
		
		
		deliveryPersonDao.save(deliveryPerson);
		return true;
	}
	
	
	//for sign in controller
	public DeliveryPersonDto findDeliveryPersonByEmailAndPassword(Credentials cred) {
		DeliveryPerson deliveryPerson = deliveryPersonDao.findByEmail(cred.getEmail());
		if(deliveryPerson == null || !deliveryPerson.getPassword().equals(cred.getPassword()))
			return null;
		com.anapurna.dtos.DeliveryPersonDto deliveryPersonDto = new DeliveryPersonDto();
		BeanUtils.copyProperties(deliveryPerson, deliveryPersonDto, "password");
		return deliveryPersonDto;
	}
	
	public boolean addDeliveryPerson (DeliveryPersonSignUpDto dto) {
		try {
			DeliveryPerson dp = new DeliveryPerson();
			dp.setName(dto.getName());
			dp.setEmail(dto.getEmail());
			dp.setPassword(dto.getPassword());
			dp.setAvailable(dto.isAvailable());
			
			dp = deliveryPersonDao.save(dp);
			
			//Refresh the state of the instance from the database,overwriting changes made to the entity, if any. 
			entityManager.refresh(dp);
		} catch (Exception e) {
			return false;
		}
		
		return true;
	
	
	}
	
}	
